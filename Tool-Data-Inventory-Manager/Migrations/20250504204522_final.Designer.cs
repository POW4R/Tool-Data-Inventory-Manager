// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tool_Data_Inventory_Manager;

#nullable disable

namespace Tool_Data_Inventory_Manager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504204522_final")]
    partial class final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MachineProduct", b =>
                {
                    b.Property<Guid>("MachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MachineId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("MachineProduct");
                });

            modelBuilder.Entity("ProductTool", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToolsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "ToolsId");

                    b.HasIndex("ToolsId");

                    b.ToTable("ProductTools", (string)null);
                });

            modelBuilder.Entity("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Tool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<bool>("IsCsigafuro")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElofuro")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNagyoloI")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNagyoloII")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNagyolomaro")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSimito2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSimitomaro")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSorjazomaro")
                        .HasColumnType("bit");

                    b.Property<int?>("MagPlace")
                        .HasColumnType("int");

                    b.Property<int>("MaterialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("Tool_Data_Inventory_Manager.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasswordResetAttempts")
                        .HasColumnType("int");

                    b.Property<int?>("PasswordResetCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PasswordResetRequestedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MachineProduct", b =>
                {
                    b.HasOne("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Machine", null)
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductTool", b =>
                {
                    b.HasOne("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tool_Data_Inventory_Manager.Features.InventoryManager.Models.Tool", null)
                        .WithMany()
                        .HasForeignKey("ToolsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
